extends pug/base

append vars
  - body.classList.push('page page--category')

block content
  section.category
    main.category__content
      //- HEADER
      .category__header
        .category__header-crumbs
          -var breadcrumbs = ['Главная', 'Чемоданы'];
          include pug/parts/breadcrumbs
        .category__header-title
          h1.category__title Чемоданы
      
      //- TEXT
      .category__filter
        a(href="").btn.btn--bordered.js-filter-toggler Фильтр
      //- TEXT
      .category__text Сайт рыбатекст поможет дизайнеру, верстальщику, вебмастеру сгенерировать несколько абзацев более менее осмысленного текста рыбы на русском языке, а начинающему оратору отточить навык публичных выступлений в домашних условиях. При создании генератора мы использовали небезизвестный универсальный код речей. Текст генерируется абзацами случайным образом от двух до десяти предложений в абзаце, что позволяет сделать текст более привлекательным и живым для визуально-слухового восприятия. По своей сути рыбатекст является альтернативой традиционному lorem ipsum, который вызывает у некторых людей недоумение при попытках прочитать рыбу текст. В отличии от lorem ipsum, текст рыба на русском языке наполнит любой макет непонятным смыслом и придаст неповторимый колорит советских времен.
      
      //- SORT
      .category__sort
        .sort-panel
      
      //- PRODUCTS
      .category__body
        include pug/parts/category-panel
        .products
          include pug/db/products-6
          each product, index in products
            include pug/parts/product
          include pug/parts/category-special
          
          include pug/db/products-12
          each product, index in products
            include pug/parts/product
      
      //- PAGINATION
      .category__action
        include pug/parts/pagination

        a(href="").pagination__next-page
          span Следующая страница
          i.icon--arrow-right


    aside.category__sidebar.sidebar
      //- Sidebar Close
      .sidebar__close.js-filter-toggler
        span Закрыть
      //- Categories Groups
      include pug/parts/categories-groups

      //- Filter
      include pug/parts/filter
block body-end
  script.
    function RangeSliderFactory(options){
        factory = this;
        factory.slider = options.slider;
        factory.slider_from = options.slider_from;
        factory.slider_to = options.slider_to;
        factory.range = options.range;
        factory.min = options.min;
        factory.max = options.max;
        factory.from = options.from;
        factory.to = options.to;
        
        runRangeSlider(factory);
    }
    function runRangeSlider(factory){
        factory.updateValues = function () {
            factory.slider_from.prop("value", factory.from);
            factory.slider_to.prop("value", factory.to);
        };
        factory.slider.ionRangeSlider({
            type: "double",
            min: factory.min,
            max: factory.max,
            prettify_enabled: false,
            grid: false,
            from: factory.from,
            to: factory.to,
            hide_min_max: true,
            hide_from_to: true,
            onChange: function (data) {
                factory.from = data.from;
                factory.to = data.to;
                
                factory.updateValues();
            }
        });
        factory.range = factory.slider.data("ionRangeSlider");

        factory.updateRange = function() {
            factory.range.update({from: factory.from, to: factory.to})
        }

        factory.slider_from.on("change", function (event) {
            factory.from = +$(event.currentTarget).prop("value");
            if (isNaN(factory.from) || factory.from === undefined) {
                factory.from = factory.min;
            }
            if (factory.from <= factory.min) {
                factory.from = factory.min;
            }
            if (factory.from > factory.to) {
                factory.from = factory.to;
            }

            factory.updateValues();
            factory.updateRange();
        });

        factory.slider_to.on("change", function (event) {
            factory.to = +$(event.currentTarget).prop("value");
            if (isNaN(factory.to) || factory.to === undefined) {
                factory.to = factory.max;
            }
            if (factory.to >= factory.max) {
                factory.to = factory.max;
            }
            if (factory.to < factory.from) {
                factory.to = factory.from;
            }

            factory.updateValues();
            factory.updateRange();
        });
        factory.updateValues();
        factory.updateRange();
    }


    function getSliderOptions(sliderName) {
        return {
            slider: $(".js-"+ sliderName +"-slider"),
            slider_from: $(".js-"+ sliderName +"-from"),
            slider_to: $(".js-"+ sliderName +"-to"),
            range: 0,
            min: $(".js-"+ sliderName +"-slider").data('min'),
            max: $(".js-"+ sliderName +"-slider").data('max'),
            from: $(".js-"+ sliderName +"-slider").data('from'),
            to: $(".js-"+ sliderName +"-slider").data('to')
        }
    }

    // =======================================
    // НИЖЕ ИДУТ БЛОКИ С НАСТРОЙКАМИ ФИЛЬТРОВ
    // =======================================

    // Фильтр по ЦЕНЕ
    var priceRangeSliderOptions = getSliderOptions('price');
    new RangeSliderFactory(priceRangeSliderOptions);

    // Фильтр по ДЛИННЕ
    var lengthRangeSliderOptions = getSliderOptions('length');
    new RangeSliderFactory(lengthRangeSliderOptions);

    // Фильтр по ВЫСОТЕ
    var heightRangeSliderOptions = getSliderOptions('height');
    new RangeSliderFactory(heightRangeSliderOptions);

    // Фильтр по ШИРИНЕ
    var widthRangeSliderOptions = getSliderOptions('width');
    new RangeSliderFactory(widthRangeSliderOptions);
